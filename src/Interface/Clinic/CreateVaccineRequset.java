/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface.Clinic;


import Business.Billing.InjectionItem;
import Business.Enterprise.Enterprise;
import Business.Inventory.InventoryItem;
import Business.Manufactrurer.Manufacturer;
import Business.Network.Network;
import Business.Organization.DistributorOrganization;
import Business.Organization.Organization;
import Business.Role.ManufacturerRole;
import Business.UserAccount.UserAccount;
import Business.Vaccine.Vaccine;
import Business.WorkRequest.ClinicRequest;
import Business.WorkRequest.VaccineRequestItem;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yufeng
 */
public class CreateVaccineRequset extends javax.swing.JPanel {

    /**
     * Creates new form CreateVaccineRequset
     */
    JPanel userProcessContainer;
    Network network;
    UserAccount userAccount;
    ClinicRequest clinicRequest;
    Boolean isCheckedOut = false;
    Enterprise enterprise;
    Organization organization;
    public CreateVaccineRequset(JPanel userProcessContainer,Network network,Enterprise enterprise, UserAccount userAccount,Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.network = network;
        this.organization = organization;
        clinicRequest = new ClinicRequest();
        populateVaccineTable();
        
    }

    public void populateVaccineTable(){
        DefaultTableModel dtm = (DefaultTableModel) vaccineJtable.getModel();
        dtm.setRowCount(0);
        
        for(Enterprise enterprisehere : network.getEnterpriseDirectory().getEnterpriseList()){
            if(enterprisehere instanceof Manufacturer){
                for(UserAccount userAccounthere : enterprisehere.getUserAccountDirectory().getUserAccountList()){
                    for(Vaccine vaccine : ((ManufacturerRole)userAccounthere.getRole()).getVaccineCatalog().getVaccineList()){
                      Object[] row = new Object[4];
                      row[0] = vaccine;
                      row[1] = vaccine.getName();
                      row[2] = vaccine.getManufacturerName();
                      row[3] = vaccine.getPrice();
                      dtm.addRow(row);
                    }
                }
            }
           
        }
        
    }
    
    public void populateFinalRequestJTable(){
        DefaultTableModel dtm = (DefaultTableModel) finalRequestJtable.getModel();
        dtm.setRowCount(0);
        for(VaccineRequestItem itemincart : clinicRequest.getVaccineRequestItemList()){
            Object[] row = new Object[5];
            row[0] = itemincart.getVaccine().getVaccineID();
            row[1] = itemincart.getVaccine().getName();
            row[2] = itemincart.getVaccine().getManufacturerName();
            row[3] = itemincart.getVaccine().getPrice();
            row[4] = itemincart.getAmount();
            dtm.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        vaccineJtable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        quantityjSpinner2 = new javax.swing.JSpinner();
        addJButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        finalRequestJtable = new javax.swing.JTable();
        submitJButton = new javax.swing.JButton();
        backJButton1 = new javax.swing.JButton();

        vaccineJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Manufacturer Name", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(vaccineJtable);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Quantity:");

        quantityjSpinner2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        addJButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button-Add-icon.png"))); // NOI18N
        addJButton1.setText("ADD to Cart");
        addJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButton1ActionPerformed(evt);
            }
        });

        finalRequestJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Manufacturer Name", "Unit Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(finalRequestJtable);

        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Circle-apply-icon.png"))); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        backJButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Back-3-icon.png"))); // NOI18N
        backJButton1.setText("Back");
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(45, 45, 45)
                            .addComponent(quantityjSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(56, 56, 56)
                            .addComponent(addJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(119, 119, 119))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(201, 201, 201)
                            .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityjSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(backJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButton1ActionPerformed
        // TODO add your handling code here:
        int seletedRow = vaccineJtable.getSelectedRow();
        if(seletedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }
        else{

            Vaccine vaccinehere = (Vaccine) vaccineJtable.getValueAt(seletedRow, 0);
            Boolean isinclude = false;
            int quantity = (int) quantityjSpinner2.getValue();
            
            for(VaccineRequestItem vaccineRequestItem : clinicRequest.getVaccineRequestItemList()){
                if(vaccinehere.getName().equals(vaccineRequestItem.getVaccine().getName())){
                    int amout = vaccineRequestItem.getAmount();
                    amout = amout + quantity;
                    vaccineRequestItem.setAmount(amout);
                    isinclude = true;
                }
            }

            if(!isinclude){
                VaccineRequestItem vaccineItem = new VaccineRequestItem();
                vaccineItem.setAmount(quantity);
                vaccineItem.setVaccine(vaccinehere);
                clinicRequest.getVaccineRequestItemList().add(vaccineItem);
            }

            populateVaccineTable();
            populateFinalRequestJTable();

        }
    }//GEN-LAST:event_addJButton1ActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        
        
        if(clinicRequest.getVaccineRequestItemList() != null){
            clinicRequest.setClinicAdmin(userAccount);
            clinicRequest.setClinicName(organization.getName());
            clinicRequest.setStatus("Sent");
            clinicRequest.setCreateTime(clinicRequest.getTimestampe());
            enterprise.getWorkQueue().getWorkRequestList().add(clinicRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(clinicRequest);
            JOptionPane.showMessageDialog(null, "Your request has been sent!");
        }
        else{
            JOptionPane.showMessageDialog(null, "There is something wrong!");
            return;
        }
        if(!isCheckedOut){
            ClinicRequest clinicRequest2 = new ClinicRequest();
            populateVaccineTable();
            populateFinalRequestJTable();
        }

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton1;
    private javax.swing.JButton backJButton1;
    private javax.swing.JTable finalRequestJtable;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner quantityjSpinner2;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTable vaccineJtable;
    // End of variables declaration//GEN-END:variables
}
