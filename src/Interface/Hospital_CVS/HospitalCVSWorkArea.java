/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface.Hospital_CVS;

import Business.Business;
import Business.Enterprise.CDCEnterprise;
import Business.Enterprise.CVSEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yufeng
 */
public class HospitalCVSWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form HospitalCVSWorkArea
     */
    JPanel userProcessContainer;
    Business business;
    Network network;
    Enterprise enterprise;
    UserAccount userAccount;
    
    public HospitalCVSWorkArea(JPanel userProcessContainer,UserAccount userAccount,Network network,Enterprise enterprise,Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.network = network;
        populateTable();
        populateClinicVaccineTable();
        populateUserJTable();
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)organizationJTable.getModel();
        dtm.setRowCount(0);
        for(Organization oi : ((HospitalEnterprise)enterprise).getOrganizationDirectory().getOrganizationList()){
            Object[] row = new Object[3];
            row[0] = oi;
            row[1] = oi.getName();
            row[2] = oi.getStatus();
            dtm.addRow(row);
        }    
    }
    
    public void populateClinicVaccineTable(){
        DefaultTableModel dtm = (DefaultTableModel) clinicvaccineJTable1.getModel();
        dtm.setRowCount(0);
        for(WorkRequest workRequest : enterprise.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = workRequest;
            row[1] = workRequest.getClinicAdmin();
            row[2] = workRequest.getHospitalCVSAdmin() == null ? null : workRequest.getHospitalCVSAdmin();
            row[3] = workRequest.getStatus() == "Sent" ? "Arrival" : workRequest.getStatus();
            row[4] = workRequest.getCreateTime();
            dtm.addRow(row);
        }
    }
    
    
    public void populateByDate(String time){
        DefaultTableModel dtm = (DefaultTableModel) clinicvaccineJTable1.getModel();
        dtm.setRowCount(0);
        for(WorkRequest workRequest : enterprise.getWorkQueue().getWorkRequestList()){
            if(time.equals(workRequest.getCreateTime())){
                Object[] row = new Object[5];
                row[0] = workRequest;
                row[1] = workRequest.getClinicAdmin();
                row[2] = workRequest.getHospitalCVSAdmin() == null ? null : workRequest.getHospitalCVSAdmin();
                row[3] = workRequest.getStatus() == "Sent" ? "Arrival" : workRequest.getHospitalCVSAdmin();
                row[4] = workRequest.getCreateTime();
                dtm.addRow(row);
            }
         
        }
    }
    
    public void populateUserJTable(){
        DefaultTableModel dtm = (DefaultTableModel) userJTable.getModel();
        dtm.setRowCount(0);
        
        for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            for(UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()){
                Object[] row = new Object[4];
                row[0] = organization;
                row[1] = organization.getName();
                row[2] = userAccount;
                row[3] = userAccount.getAccountStatus();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        refreshJButton = new javax.swing.JButton();
        deleteOrganizationJButton = new javax.swing.JButton();
        editJButton = new javax.swing.JButton();
        viewJButton1 = new javax.swing.JButton();
        addJButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        refreshJButton2 = new javax.swing.JButton();
        deleteJButton1 = new javax.swing.JButton();
        editJButton1 = new javax.swing.JButton();
        viewJButton4 = new javax.swing.JButton();
        addJButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        userJTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clinicvaccineJTable1 = new javax.swing.JTable();
        viewJButton2 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        searchJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jPanel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        refreshJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Reload-icon.png"))); // NOI18N
        refreshJButton.setText("Refresh ");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        deleteOrganizationJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteOrganizationJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delete-icon.png"))); // NOI18N
        deleteOrganizationJButton.setText("Delete Organization");
        deleteOrganizationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrganizationJButtonActionPerformed(evt);
            }
        });

        editJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit-icon.png"))); // NOI18N
        editJButton.setText("Edit Organization Info");
        editJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editJButtonActionPerformed(evt);
            }
        });

        viewJButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-view-list-details-icon.png"))); // NOI18N
        viewJButton1.setText("View Organization");
        viewJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButton1ActionPerformed(evt);
            }
        });

        addJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button-Add-icon.png"))); // NOI18N
        addJButton.setText("Add Organization");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(viewJButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteOrganizationJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(477, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteOrganizationJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Management Organization", jPanel1);

        refreshJButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshJButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Reload-icon.png"))); // NOI18N
        refreshJButton2.setText("Refresh ");
        refreshJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButton2ActionPerformed(evt);
            }
        });

        deleteJButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delete-icon.png"))); // NOI18N
        deleteJButton1.setText("Delete ");
        deleteJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButton1ActionPerformed(evt);
            }
        });

        editJButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit-icon.png"))); // NOI18N
        editJButton1.setText("Edit Employee Info");
        editJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editJButton1ActionPerformed(evt);
            }
        });

        viewJButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewJButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-view-list-details-icon.png"))); // NOI18N
        viewJButton4.setText("View Employee");
        viewJButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButton4ActionPerformed(evt);
            }
        });

        addJButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button-Add-icon.png"))); // NOI18N
        addJButton1.setText("Add User Account");
        addJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButton1ActionPerformed(evt);
            }
        });

        userJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization ID", "Organization Name", "UserAccount", "UserAccount Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(userJTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addJButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editJButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(viewJButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteJButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshJButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(viewJButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(editJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(refreshJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(129, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Management User Account", jPanel2);

        clinicvaccineJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Order ID", "Sender", "Receiver", "Status", "Created Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(clinicvaccineJTable1);

        viewJButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewJButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-view-list-details-icon.png"))); // NOI18N
        viewJButton2.setText("View All Orders");
        viewJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButton2ActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy/MM/dd");
        jDateChooser1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        searchJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search-icon.png"))); // NOI18N
        searchJButton.setText("Search");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });

        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Circle-apply-icon.png"))); // NOI18N
        submitJButton.setText("Approve");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(searchJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 224, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(214, 214, 214)
                                .addComponent(viewJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(217, 217, 217)
                                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(viewJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Vaccine Order Management ", jPanel3);

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clinic Organization ID", "Clinic Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        AddOrganizationHospital ado = new AddOrganizationHospital(userProcessContainer,enterprise);
        userProcessContainer.add("AddOrganization",ado);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_addJButtonActionPerformed

    private void viewJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = organizationJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{
            Organization organization = (Organization)organizationJTable.getValueAt(selectedRow, 0);
            ViewOrganizationHospital vo = new ViewOrganizationHospital(userProcessContainer,organization);
            userProcessContainer.add("ViewOrganizationHospital",vo);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewJButton1ActionPerformed

    private void editJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editJButtonActionPerformed
        // TODO add your handling code here
        int selectedRow = organizationJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{
            Organization organization = (Organization)organizationJTable.getValueAt(selectedRow, 0);
            EditOrganizationHospital eo = new EditOrganizationHospital(userProcessContainer, organization);
            userProcessContainer.add("EditOrganizationHospital", eo);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_editJButtonActionPerformed

    private void deleteOrganizationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrganizationJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = organizationJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{
            Organization organization = (Organization)organizationJTable.getValueAt(selectedRow, 0);

            int p =  JOptionPane.showConfirmDialog(null, "Do you want to delete this?","Delete",JOptionPane.YES_NO_OPTION);
            if(p == 0){
                organization.setStatus("Disable");
            }

        }
    }//GEN-LAST:event_deleteOrganizationJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void refreshJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButton2ActionPerformed
        // TODO add your handling code here:
        populateUserJTable();
    }//GEN-LAST:event_refreshJButton2ActionPerformed

    private void deleteJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = userJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a User first!");
        }
        else{
            UserAccount userAccounthere = (UserAccount) userJTable.getValueAt(selectedRow,2);
            Organization organizationhere = (Organization) userJTable.getValueAt(selectedRow, 0);
            int p =  JOptionPane.showConfirmDialog(null, "Do you want to delete this?","Delete",JOptionPane.YES_NO_OPTION);
            if(p == 0){
                organizationhere.getUserAccountDirectory().getUserAccountList().remove(userAccounthere);
            }

        }
    }//GEN-LAST:event_deleteJButton1ActionPerformed

    private void editJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editJButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = userJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a valid UserAccount");
        }
        else{
            UserAccount userAccount = (UserAccount) userJTable.getValueAt(selectedRow, 2);
            EditHospitalOrgUserAccount eua = new EditHospitalOrgUserAccount(userProcessContainer,userAccount);
            userProcessContainer.add("EditHospitalOrgUserAccount", eua);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_editJButton1ActionPerformed

    private void viewJButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButton4ActionPerformed
        // TODO add your handling code here:
        int selectedRow = userJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{

            UserAccount userAccount = (UserAccount) userJTable.getValueAt(selectedRow, 2);
            ViewClinicEmployee vo = new ViewClinicEmployee(userProcessContainer,userAccount);
            userProcessContainer.add("ViewOrganizationUserAccount",vo);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewJButton4ActionPerformed

    private void addJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = organizationJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{
            Organization organization = (Organization) organizationJTable.getValueAt(selectedRow,0);

            AddClinicJPanel addpa = new AddClinicJPanel(userProcessContainer,organization);
            userProcessContainer.add("AddClinicJPanel", addpa);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_addJButton1ActionPerformed

    private void viewJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButton2ActionPerformed
        // TODO add your handling code here:
       populateClinicVaccineTable();

    }//GEN-LAST:event_viewJButton2ActionPerformed

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJButtonActionPerformed
        // TODO add your handling code here:
        Date date = jDateChooser1.getDate();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd") ;
        String time = formatter.format(date);
        populateByDate(time);
    }//GEN-LAST:event_searchJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = clinicvaccineJTable1.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{
            WorkRequest workRequesthere = (WorkRequest) clinicvaccineJTable1.getValueAt(selectedRow, 0);
            if(workRequesthere.getStatus().equals("Sent")){
                workRequesthere.setStatus("Waiting for PHD approval");
                workRequesthere.setHospitalCVSAdmin(userAccount);
                
                userAccount.getWorkQueue().getWorkRequestList().add(workRequesthere);
                
                for(Enterprise enterprisehere : network.getEnterpriseDirectory().getEnterpriseList()){
                    if(enterprisehere instanceof CDCEnterprise){
                        for(Organization organizationhere : enterprisehere.getOrganizationDirectory().getOrganizationList()){
                            if(enterprise instanceof HospitalEnterprise){
                                if(organizationhere.getName().equals(((HospitalEnterprise)enterprise).getPHDbelonging())){
                                    workRequesthere.setPHDName(organizationhere.getName());
                                    organizationhere.getWorkQueue().getWorkRequestList().add(workRequesthere);
                                }
                            }
                            else if (enterprisehere instanceof CVSEnterprise){
                                if(organizationhere.getName().equals(((CVSEnterprise)enterprise).getPHDbelonging())){
                                    workRequesthere.setPHDName(organizationhere.getName());
                                    organizationhere.getWorkQueue().getWorkRequestList().add(workRequesthere);
                                }
                            }
                                
                        }
                    }
                    
                    
                }
                
                
                populateClinicVaccineTable();
            }
            else{
                JOptionPane.showMessageDialog(null, "This Order Has Been Approved");
                return;
            }   
        }

    }//GEN-LAST:event_submitJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton addJButton1;
    private javax.swing.JTable clinicvaccineJTable1;
    private javax.swing.JButton deleteJButton1;
    private javax.swing.JButton deleteOrganizationJButton;
    private javax.swing.JButton editJButton;
    private javax.swing.JButton editJButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton refreshJButton2;
    private javax.swing.JButton searchJButton;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTable userJTable;
    private javax.swing.JButton viewJButton1;
    private javax.swing.JButton viewJButton2;
    private javax.swing.JButton viewJButton4;
    // End of variables declaration//GEN-END:variables
}
