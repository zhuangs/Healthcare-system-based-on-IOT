/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface.PHD;

import Business.Business;
import Business.Enterprise.CDCEnterprise;
import Business.Enterprise.CVSEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.WorkRequest;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yufeng
 */
   

public class PHDWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form PHDWorkArea
     */
    JPanel userProcessContainer;
    Business business;
    Network network;
    Enterprise enterprise;
    Organization organization;
    UserAccount userAccount;
    public PHDWorkArea(JPanel userProcessContainer,UserAccount userAccount,Network network,Enterprise enterprise,Organization organization,Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.network = network;
        this.enterprise = enterprise;
        this.organization = organization;
        this.userAccount = userAccount;
        populatevaccineTable();
        PHDjLabel1.setText(organization.getName());
        populateEnterpriseTable();
    }
    
    
    public void populatevaccineTable(){
        DefaultTableModel dtm = (DefaultTableModel)vaccineOrderJTable.getModel();
        dtm.setRowCount(0);
        for(WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[6];
            row[0] = workRequest;
            row[1] = workRequest.getClinicAdmin();
            row[2] = workRequest.getHospitalCVSAdmin();
            row[3] = workRequest.getPHDAdmin() == null ? null : workRequest.getPHDAdmin();
            row[4] = workRequest.getStatus() == "Waiting for PHD approval" ? "Pending" : workRequest.getStatus();
            row[5] = workRequest.getCreateTime();
            dtm.addRow(row);
        }
        
    }
    
    private void populateByDate(String time) {
        DefaultTableModel dtm = (DefaultTableModel)vaccineOrderJTable.getModel();
        dtm.setRowCount(0);
        for(WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()){
            if(workRequest.getCreateTime().equals(time)){
                Object[] row = new Object[6];
                row[0] = workRequest;
                row[1] = workRequest.getClinicAdmin();
                row[2] = workRequest.getHospitalCVSAdmin();
                row[3] = workRequest.getPHDAdmin() == null ? null : workRequest.getPHDAdmin();
                row[4] = workRequest.getStatus() == "Waiting for PHD approval" ? "Pending" : workRequest.getStatus();
                row[5] = workRequest.getCreateTime();
                dtm.addRow(row);
            }
            
        }
        
        
    }
    
    public void populateEnterpriseTable(){
        DefaultTableModel dtm = (DefaultTableModel) enterpriseJTable.getModel();
        dtm.setRowCount(0);
        for(Enterprise enterprisehere : network.getEnterpriseDirectory().getEnterpriseList()){
            if(enterprisehere instanceof HospitalEnterprise){
                Object[] row = new Object[4];
                row[0] = enterprisehere;
                row[1] = enterprisehere.getName();
                row[2] = "Hospital";
                row[3] = ((HospitalEnterprise)enterprisehere).getPHDbelonging();
                dtm.addRow(row);
            }
            else if( enterprisehere instanceof CVSEnterprise){
                Object[] row = new Object[4];
                row[0] = enterprisehere;
                row[1] = enterprisehere.getName();
                row[2] = "CVS";
                row[3] = ((CVSEnterprise)enterprisehere).getPHDbelonging();   
                dtm.addRow(row);
                }
            }
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PHDjLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineOrderJTable = new javax.swing.JTable();
        viewJButton2 = new javax.swing.JButton();
        viewJButton3 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        approveJButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        approveJButton2 = new javax.swing.JButton();

        PHDjLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PHDjLabel1.setText("jLabel1");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        vaccineOrderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Order ID", "Sender", "Hospital Approval", "Receiver", "Status", "Created Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vaccineOrderJTable);

        viewJButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewJButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-view-list-details-icon.png"))); // NOI18N
        viewJButton2.setText("View All Orders");
        viewJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButton2ActionPerformed(evt);
            }
        });

        viewJButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewJButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search-icon.png"))); // NOI18N
        viewJButton3.setText("Search");
        viewJButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButton3ActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy/MM/dd");
        jDateChooser1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        approveJButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        approveJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Circle-apply-icon.png"))); // NOI18N
        approveJButton1.setText("Approve");
        approveJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(171, 171, 171)
                                .addComponent(viewJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(viewJButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(181, 181, 181)
                                .addComponent(approveJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 111, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewJButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(approveJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        jTabbedPane1.addTab("Order Management", jPanel1);

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise ID", "Enterprise Name", "Enterprise Type", "State Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(enterpriseJTable);

        approveJButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        approveJButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\yufeng\\Desktop\\Application Engineering\\New folder\\Circle-apply-icon.png")); // NOI18N
        approveJButton2.setText("Sign to Local PHD");
        approveJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveJButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(approveJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(approveJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hospital/CVS Management", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(PHDjLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(PHDjLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void approveJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveJButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccineOrderJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{
            
            WorkRequest workRequestintable = (WorkRequest) vaccineOrderJTable.getValueAt(selectedRow, 0);
            if(workRequestintable.getStatus().equals("Waiting for PHD approval")){
                workRequestintable.setPHDAdmin(userAccount);
                workRequestintable.setStatus("Sent to CDC");
                userAccount.getWorkQueue().getWorkRequestList().add(workRequestintable);
                for(Enterprise enterprisehere : network.getEnterpriseDirectory().getEnterpriseList()){
                if(enterprisehere instanceof CDCEnterprise){
                    enterprisehere.getWorkQueue().getWorkRequestList().add(workRequestintable);
                    }
                }
                JOptionPane.showMessageDialog(null, "Approval Successfully!");
                populatevaccineTable();
            }else{
                JOptionPane.showMessageDialog(null, "This Order Has Been Approved");
                return;
            }
            
            
        }

    }//GEN-LAST:event_approveJButton1ActionPerformed

    private void viewJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButton2ActionPerformed
        // TODO add your handling code here:
        populatevaccineTable();

    }//GEN-LAST:event_viewJButton2ActionPerformed

    private void viewJButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButton3ActionPerformed
        // TODO add your handling code here:
        Date date = jDateChooser1.getDate();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd") ;
        String time = formatter.format(date);
        populateByDate(time);
    }//GEN-LAST:event_viewJButton3ActionPerformed

    private void approveJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveJButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = enterpriseJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{
            Enterprise enterprisehere = (Enterprise) enterpriseJTable.getValueAt(selectedRow, 0);
            if(enterprisehere instanceof HospitalEnterprise){
                if(((HospitalEnterprise)enterprisehere).getPHDbelonging() == null ){
                   ((HospitalEnterprise)enterprisehere).setPHDbelonging(organization.getName());
                }
                else{
                    JOptionPane.showMessageDialog(null, "This enterprise has been signed!");
                }
            }
            else if (enterprisehere instanceof CVSEnterprise){
                if(((CVSEnterprise)enterprisehere).getPHDbelonging() == null){
                    ((CVSEnterprise)enterprisehere).setPHDbelonging(organization.getName());
                }
                else{
                    JOptionPane.showMessageDialog(null, "This enterprise has been signed!");
                }
              }
            
          populateEnterpriseTable();
            
        }
        
    }//GEN-LAST:event_approveJButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PHDjLabel1;
    private javax.swing.JButton approveJButton1;
    private javax.swing.JButton approveJButton2;
    private javax.swing.JTable enterpriseJTable;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable vaccineOrderJTable;
    private javax.swing.JButton viewJButton2;
    private javax.swing.JButton viewJButton3;
    // End of variables declaration//GEN-END:variables

    
}
