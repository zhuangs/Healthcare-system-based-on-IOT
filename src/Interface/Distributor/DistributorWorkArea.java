/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface.Distributor;

import Business.Billing.Billing;
import Business.Business;
import Business.Enterprise.Enterprise;
import Business.Inventory.InventoryItem;
import Business.Network.Network;
import Business.Organization.DistributorOrganization;
import Business.Organization.Organization;
import Business.Role.DistributorRole;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.ClinicRequest;
import Business.WorkRequest.ManufacturerRequest;
import Business.WorkRequest.VaccineRequestItem;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yufeng
 */
public class DistributorWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form DistributorWorkArea
     */
    JPanel userProcessContainer;
    Business business;
    Network network;
    Enterprise enterprise;
    Organization organization;
    UserAccount userAccount;
    public DistributorWorkArea(JPanel userProcessContainer,UserAccount userAccount,Network network,Enterprise enterprise,Organization organization,Business business ) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.network = network;
        this.enterprise = enterprise;
        this.organization = organization;
        this.userAccount = userAccount;
        populateShipJTable();
        populateInventoryTable();
        populateBillingTable();
        populateManufacturerTable();
    }

    
    public void populateShipJTable(){
        DefaultTableModel dtm = (DefaultTableModel) shiporderJTable.getModel();
        dtm.setRowCount(0);
        for(WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof ClinicRequest){
               Object[] row = new Object[7];
                row[0] = workRequest;
                row[1] = workRequest.getClinicAdmin();
                row[2] = workRequest.getHospitalCVSAdmin();
                row[3] = workRequest.getPHDName();
                row[4] = workRequest.getStatus() == "Sent to Distributor for shippment" ? "Pending" : workRequest.getStatus();
                row[5] = workRequest.getCDCAdmin();
                row[6] = workRequest.getCreateTime();
                dtm.addRow(row); 
            }
            
        }
        
    }
    
    public void populateInventoryTable(){
        DefaultTableModel dtm = (DefaultTableModel) vaccineInventoryJTable2.getModel();
        dtm.setRowCount(0);
        for(InventoryItem inventoryItem : ((DistributorRole)userAccount.getRole()).getInventory().getInventoryItemList()){
            Object[] row = new Object[3];
            row[0] = inventoryItem.getVaccine();
            row[1] = inventoryItem.getVaccine().getName();
            row[2] = inventoryItem.getAmount();
            dtm.addRow(row);
        }
        
    }
    
    public void populateBillingTable(){
        DefaultTableModel dtm = (DefaultTableModel) billingJTable.getModel();
        dtm.setRowCount(0);
        for(Billing billing : ((DistributorOrganization)organization).getBillingDirectory().getBillingList()){
            Object[] row = new Object[5];
            row[0] = billing;
            row[1] = billing.getPatient().getFirstname();
            row[2] = billing.getClinicName();
            row[3] = billing.getTotalPrice();
            row[4] = billing.getStatus() == "Sent" ? "Pending" : billing.getStatus();
            dtm.addRow(row);
        
        }
        
    }
    
    public void populateManufacturerTable(){
        DefaultTableModel dtm = (DefaultTableModel) manufacturerrequestJTable.getModel();
        dtm.setRowCount(0);
        for(WorkRequest workRequest : organization.getWorkQueue().getWorkRequestList()){
            if(workRequest instanceof ManufacturerRequest){
                Object[]  row = new Object[3];
                row[0] = workRequest;
                row[1] = workRequest.getStatus() == "Sent" ? "Arrival" : workRequest.getStatus();
                row[2] = workRequest.getDistributor() == null ? null : workRequest.getDistributor();
                dtm.addRow(row);   
            }
            
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        shiporderJTable = new javax.swing.JTable();
        submitJButton1 = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        billingJTable = new javax.swing.JTable();
        submitJButton = new javax.swing.JButton();
        refreshJButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        vaccineInventoryJTable2 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        manufacturerrequestJTable = new javax.swing.JTable();
        receiveJButton = new javax.swing.JButton();

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        shiporderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Order ID", "Sender", "Hospital Reciver", "PHD Name", "Status", "CDC Receiver", "Created Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(shiporderJTable);

        submitJButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Circle-apply-icon.png"))); // NOI18N
        submitJButton1.setText("Confirm and Ship");
        submitJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButton1ActionPerformed(evt);
            }
        });

        refreshJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Reload-icon.png"))); // NOI18N
        refreshJButton.setText("Refresh ");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(submitJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(submitJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jTabbedPane1.addTab("Order Management", jPanel1);

        billingJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Billing ID", "Patient Name", "Clinic Name", "Total Prise", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(billingJTable);

        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Circle-apply-icon.png"))); // NOI18N
        submitJButton.setText("View Details to Approve");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        refreshJButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshJButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Reload-icon.png"))); // NOI18N
        refreshJButton1.setText("Refresh ");
        refreshJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(refreshJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(submitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(refreshJButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        jTabbedPane1.addTab("Billing", jPanel2);

        vaccineInventoryJTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine ID", "Vaccine Name", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(vaccineInventoryJTable2);

        manufacturerrequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Order ID", "Status", "Receiver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(manufacturerrequestJTable);

        receiveJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        receiveJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button-Download-icon.png"))); // NOI18N
        receiveJButton.setText("Receive Vaccine");
        receiveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receiveJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(receiveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(receiveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 52, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Inventory", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = billingJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{
            
            Billing billing = (Billing) billingJTable.getValueAt(selectedRow, 0);
            BillingConfirmJPanel bjp = new BillingConfirmJPanel(userProcessContainer,billing,network);
            userProcessContainer.add("BillingConfirmJPanel", bjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void submitJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = shiporderJTable.getSelectedRow();
        if(selectedRow < 0 ){
           JOptionPane.showMessageDialog(null, "Please select a row!"); 
        }
        else{
            
            WorkRequest workRequesthere = (WorkRequest) shiporderJTable.getValueAt(selectedRow, 0);
            if(workRequesthere.getStatus().equals("Shipped")){
                JOptionPane.showMessageDialog(null, "This order has already been shipped.");
                return;
            }
            ShipConfirmJPanel scjp = new ShipConfirmJPanel(userProcessContainer,network,workRequesthere);
            userProcessContainer.add("ShipConfirmJPanel",scjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_submitJButton1ActionPerformed

    private void receiveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receiveJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = manufacturerrequestJTable.getSelectedRow();
        if(selectedRow < 0 ){
            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        else{
                WorkRequest workRequesthere = (WorkRequest) manufacturerrequestJTable.getValueAt(selectedRow, 0);
                if(workRequesthere.getStatus().equals("Done")){
                    JOptionPane.showMessageDialog(null,"You have already confirmed this order!");
                    return;
                }
                else{
                    Boolean isinclude = false;
                    for(VaccineRequestItem Item : ((ManufacturerRequest)workRequesthere).getVaccineRequestItemList()){
                        for(InventoryItem inventoryItem : ((DistributorRole)userAccount.getRole()).getInventory().getInventoryItemList()){
                            if(Item.getVaccine().getName().equals(inventoryItem.getVaccine().getName()) && Item.getVaccine().getManufacturerName().equals(inventoryItem.getVaccine().getManufacturerName())){
                                int newAmount = inventoryItem.getAmount() + Item.getAmount();
                                inventoryItem.setAmount(newAmount);
                                isinclude = true;
                            }
                        }
                        if(!isinclude){
                            InventoryItem inventoryItemnot = new InventoryItem();
                            inventoryItemnot.setVaccine(Item.getVaccine());
                            inventoryItemnot.setAmount(Item.getAmount());
                            ((DistributorRole)userAccount.getRole()).getInventory().getInventoryItemList().add(inventoryItemnot);

                        }
                    }
                    workRequesthere.setStatus("Done");
                    workRequesthere.setDistributor(userAccount);
                    populateInventoryTable();
                    populateManufacturerTable();
             } 
        }
                

    }//GEN-LAST:event_receiveJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        populateShipJTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void refreshJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButton1ActionPerformed
        // TODO add your handling code here:
        populateBillingTable();
    }//GEN-LAST:event_refreshJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable billingJTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable manufacturerrequestJTable;
    private javax.swing.JButton receiveJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton refreshJButton1;
    private javax.swing.JTable shiporderJTable;
    private javax.swing.JButton submitJButton;
    private javax.swing.JButton submitJButton1;
    private javax.swing.JTable vaccineInventoryJTable2;
    // End of variables declaration//GEN-END:variables
}
